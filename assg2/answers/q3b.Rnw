q3b
The following code writes a function that can plot the solution $I(t)$ of the SIR model
<<SIRmodel, message=FALSE, warning=FALSE, dev='tikz'>>=
library(deSolve) 
SIR.vector.field <- function(t, vars, parms=c(beta=2,gamma=1)) {
with(as.list(c(parms, vars)), {
dx <- -beta*x*y # dS/dt of SIR model
dy <- beta*x*y-gamma*y # dI/dt of SIR model
dz<- gamma*y #dr/dt of SIR model
vec.fld <- c(dx=dx, dy=dy, dz=dz)
return(list(vec.fld)) # ode() requires a list
})
}
##Plots the solution I(t) of the SIR model
plot.It <- function(ic=c(x=1,y=0,z=0), tmax=1,
times=seq(0,tmax,by=tmax/500),
func, parms, ... ) {
It <- ode(ic, times, func, parms) 
lines(times, It[,"y"], col="green", lwd=2, ... )
}
tmax <- 50 # end time for numerical integration of the ODE
## draws the empty plot:
plot(0,0,xlim=c(0,8),ylim=c(0,0.45),
type="n",bty="L",xlab="Time (t)",ylab="Prevalence (I)",las=1)
##The following is an example of a graph using the function plot.It

## Given initial conditions and parameter values:
I0 <- 0.001
S0 <- 1 - I0
R0 <- 4
mif<-1 #mean infectious period
{
plot.It(ic=c(x=S0,y=I0,z=0), tmax=tmax,
func=SIR.vector.field,
parms=c(beta=R0/mif,gamma=(1/mif))
)
}

@
